---
pagetitle: "ETX2250/ETF5922"
subtitle: "The Good, the Bad and the Ugly of Data Visualisations"
author: Kate Saunders
email: "etx2250-etf5922.caulfield-x@monash.edu"
date: "Lecture 2"
department: "Department of Econometrics and Business Statistics"
footer: "ETX2250/ETF5922"
format: 
  revealjs: 
    logo: ../images/monash-one-line-black-rgb.png
    slide-number: c
    multiplex: false
    theme: ../assets/monash.scss
    show-slide-number: all
    show-notes: false
    controls: true
    width: 1280
    height: 720
    css: [assets/custom.css, assets/lecture-01.css]
    include-after-body: "assets/after-body.html"
    chalkboard:
      boardmarker-width: 5
      buttons: true
---

```{r}
# Install the packages if you don't have them 

# if(!require(colorblindr)){
#   install.packages("devtools")
#   library(devtools)
  # remotes::install_github("clauswilke/colorblindr")
# }

# if(!require(colorspace)){
#   install.packages("colorspace")
# }

# Now they are installed, load the packages from your library

library(tidyverse)
library(colorspace)
library(colorblindr)
library(ggtext)
library(kableExtra)

dfsex <- read_csv("data/census-birthplace-by-sex.csv") %>%
  filter(!birth %in% c("Total")) %>% 
  filter(!birth %in% c("Not Stated", "Other", "Australia")) %>% 
  mutate(birth = fct_reorder(birth, count, mean)) %>% 
  group_by(sex) %>% 
  mutate(rank = rank(-percentage)) %>% 
  filter(rank %in% 1:5) %>% 
  ungroup()

df <- read_csv(here::here("data/census-birthplace.csv"))
df2021 <- df %>% 
  filter(census == 2021) %>% 
  filter(!birth %in% c("Total")) %>% 
  select(-census)

df2 <- df %>% 
  filter(census %in% c(2021, 2016)) %>% 
  filter(!birth %in% c("Total")) %>% 
  filter(!birth %in% c("Not Stated", "Other", "Australia")) %>% 
  group_by(census) %>% 
  mutate(rank = rank(-percentage)) %>% 
  filter(rank %in% 1:5) %>% 
  ungroup()

```

## <br>[`r rmarkdown::metadata$pagetitle`]{.monash-blue} {#etc5523-title background-image="images/bg-01.png"}

### `r rmarkdown::metadata$subtitle`

Lecturer: *`r rmarkdown::metadata$author`*

`r rmarkdown::metadata$department`

::: tl
<br>

<ul class="fa-ul">

<li><i class="fas fa-envelope"></i>`r rmarkdown::metadata$email`</li>

<li><i class="fas fa-calendar-alt"></i> `r rmarkdown::metadata$date`</li>

<li><i class="fa-solid fa-globe"></i>\<a href="`r rmarkdown::metadata[["unit-url"]]`"\>`r rmarkdown::metadata[["unit-url"]]`</a></li>

</ul>

<br>
:::

## Today's Lecture

::: callout-tip
## What's you'll learn

-   Tufteâ€™s principles of graphical excellence

-   How to avoid bad plots

-   What makes a misleading visualisations

-   Human perception of visual elements

-   Colour scales

-   Example using population data
:::

# Principles of graphical excellence {background-color="#006DAE"}

Let's start by looking at an example

## Birth place from the 2021 Australian Census {.scrollable auto-animate="true"}

::::: columns
::: {.column width="60%"}
```{r}
df2021 %>% 
  mutate(count = scales::comma(count, 1),
         percentage = scales::comma(percentage, 0.1)) %>% 
  knitr::kable(col.names = c("Birth place", "Count", "%"),
               align = "lrr") %>% 
  kableExtra::kable_classic(full_width = FALSE)
```
:::

::: {.column width="40%"}
-   Tables are be useful

-   But quickly seeing differences between two large numbers is hard

-   Visualising this data *well* would make the differences clearer
:::
:::::

## Birth place from the 2021 Australian Census {auto-animate="true"}

```{r census2021-part1, fig.width = 12, fig.height = 4}
df2021 %>% 
  ggplot(aes(birth, percentage)) +
  geom_col() +
  theme(text = element_text(size = 18),
        axis.text.x = element_text(angle = 45, size = 10, hjust = 1)) + 
  labs(x = "", y = "Percentage", caption = "Data source: Australian Census 2021")
```

. . .

Which birth place is the third largest among people in Australia?

## Birth place from the 2021 Australian Census {auto-animate="true"}

```{r census2021-part2, fig.width = 12, fig.height = 4}
df2021 %>% 
  mutate(birth = fct_reorder(birth, -percentage)) %>% 
  ggplot(aes(birth, percentage)) +
  geom_col() +
  theme(text = element_text(size = 18),
        axis.text.x = element_text(angle = 45, size = 10, hjust = 1)) + 
  labs(x = "", y = "Percentage", caption = "Data source: Australian Census 2021")
```

. . .

<i class="fa-solid fa-face-meh" style=" transform: rotate(-45deg)"></i> Can you read the labels without tilting your head?

## Birth place from the 2021 Australian Census {.scrollable auto-animate="true"}

::::: columns
::: {.column width="40%"}
```{r census2021-part4, fig.height = 12, fig.width = 4}
df2021 %>% 
  mutate(birth = fct_reorder(birth, percentage)) %>% 
  ggplot(aes(percentage, birth)) +
  geom_col() +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8)) + 
  labs(y = "", x = "Percentage", caption = "Data source: Australian Census 2021")
```
:::

::: {.column width="60%"}
<br> Even if we fix the labels, something is not working with this plot.

<br> There is a lot of empty wasted space

<br> Hard to tell what's going on

<br> Not 'showing' the data.
:::
:::::

## Graphical Principle: Data Density

::: callout-important
## Optimise the Data Density

**Definition:** The data-to-density ratio is the how much information is packed into the visualisation compared to the what is shown in the whole visualisation.

**Objective:**
-   Balance the detail with the ease of interpretation.

-   Maximise the data density so patterns and trends are shown without cluttering the graphic.

**Why:**
-   Complicated graphics are hard to interpret and can be overwhelming.

-   In contrast, under-dense graphics might not show enough detail.

**Example:** In the previous example of data to density ratio is too low, so patterns in the data are not clear.

**Note:** When the data density is small you can use a table.
:::

## Top 5 countries of birth outside Australia {auto-animate="true"}

::::: flex
::: w-60
```{r census2021-part5o1}

total2021 <- df %>% 
  filter(birth=="Total" & census==2021) %>% 
  pull(count)

auperc2021 <- df %>% 
  filter(birth=="Australia" & census==2021) %>% 
  pull(percentage)

nsperc2021 <- df %>% 
  filter(birth=="Not Stated" & census==2021) %>% 
  pull(percentage)

df2021 %>% 
  arrange(desc(percentage)) %>% 
  filter(!birth %in% c("Australia", "Other", "Not Stated")) %>% 
  slice(1:5) %>% 
  mutate(birth = fct_reorder(birth, count)) %>% 
  ggplot(aes(count, birth)) +
  geom_col(aes(fill = birth)) +
  geom_text(aes(label = scales::percent(percentage/100, 0.1)),
            nudge_x = -50000, color = "white") +
  scale_x_continuous(labels = scales::comma) +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot") + 
  labs(y = "Birth place", x = "Number of Australian residents\n", caption = "Data source: Australian Census 2021",
       title = "Top 5 countries of birth outside Australia") + 
  theme(legend.position = "none")
```
:::

::: {.w-40 .f3}
This is a much clearer plot!

The data-density ratio is maximised.
:::
:::::

## Graphical Principle: Data to ink ratio

Reduce the chart junk!!!

::: callout-important
## Maximise the data to ink ratio!

**Definition:** The data-to-ink ratio refers to the proportion of "ink" used in a graphic to show the data compared with the total ink used.

**Objective:** Reduce non-essential elements that don't convey data messages (like extra borders, colours, shading, or decorative graphics). Want a clean and focused design.

**Why:** Maximising the amount of data-to-ink ratio improves readability and clarity.

**Example:** In the previous example the colour looked cool - but its not adding anything to the data story. Next slide shows how we can use color better.
:::

## India is No. 3 {auto-animate="true"}

::::: flex
India now third most common place of birth of Australian residents

::: w-60
```{r census2021-part5}
total2021 <- df %>% 
  filter(birth=="Total" & census==2021) %>% 
  pull(count)
auperc2021 <- df %>% 
  filter(birth=="Australia" & census==2021) %>% 
  pull(percentage)
nsperc2021 <- df %>% 
  filter(birth=="Not Stated" & census==2021) %>% 
  pull(percentage)
df2021 %>% 
  arrange(desc(percentage)) %>% 
  filter(!birth %in% c("Australia", "Other", "Not Stated")) %>% 
  slice(1:5) %>% 
  mutate(birth = fct_reorder(birth, count)) %>% 
  ggplot(aes(count, birth)) +
  geom_col() +
  geom_col(data = ~filter(.x, birth=="India"),
           fill = "#006DAE") + 
  geom_text(aes(label = scales::percent(percentage/100, 0.1)),
            nudge_x = -50000, color = "white") +
  scale_x_continuous(labels = scales::comma) +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot") + 
  labs(y = "Birth place", x = "Number of Australian residents\n", caption = "Data source: Australian Census 2021",
       title = "Top 5 countries of birth outside Australia")
```
:::

::: {.w-40 .f3}
-   The text on the bar shows the percentage out of `r scales::comma(total2021)` Australian residents born in that place.

-   `r scales::percent(nsperc2021/100, 0.1)` of Australian residents who did not state their birth place.

-   Top birth place in Australia is Australia with `r scales::percent(auperc2021/100, 0.1)`.

<i class="fa-solid fa-newspaper"></i> Story from [The Guardian](https://www.theguardian.com/australia-news/2022/jun/28/india-now-third-most-common-place-of-birth-of-australian-residents-census-results-show).
:::
:::::

## Another example

::: callout-note
## Data in the News

India has overtaken China and New Zealand to become the third largest country of birth for Australian residents, 2021 census data has found.

[-- The Guardian](https://www.theguardian.com/australia-news/2022/jun/28/india-now-third-most-common-place-of-birth-of-australian-residents-census-results-show)
:::

```{r}
df2 %>% 
  select(-rank) %>% 
  mutate(count = scales::comma(count, 1),
         percentage = scales::comma(percentage, 0.1)) %>% 
  knitr::kable(col.names = c("Birth place", "Count", "%", "Census Year"),
               align = "lrrr") %>% 
  kableExtra::kable_classic(full_width = FALSE)
```

## Aussie residents 2016 compared with 2021

India has overtaken China and New Zealand to become the third largest country of birth for Australian residents.

```{r census2-part1, fig.width = 8, fig.height = 3, fig.align= 'center'}
df2  %>% 
  mutate(birth = fct_reorder(birth, count, sum)) %>% 
  ggplot(aes(count, birth)) +
  geom_col() + 
  geom_col(data = ~filter(.x, birth=="India"),
           fill = "#006DAE") + 
  geom_text(aes(label = scales::percent(percentage/100, 0.1)),
            nudge_x = -70000, color = "white") +
  scale_x_continuous(labels = scales::comma) +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot") +
  facet_wrap(~census) + 
  scale_x_continuous(labels = scales::comma) +
  labs(y = "Birth place", x = "Number of Australian residents\n", caption = "Data source: Australian Census 2016 and 2021",
       title = "Top 5 countries of birth outside Australia")
```

Does this show that India overtook China and New Zealand?

## Graphical Principles: Comparison

::: callout-important
## Gestalt Principle

-   "Gestalt" is German for form or shape.
-   A set of laws to address the natural compulsion to find order in disorder by perceiving a series of individual elements as a whole.
:::

::: callout-important
## Law of Proximity

-   By placing elements closer together, it makes it easier for you to group elements together as well as make comparisons.
:::

## Changes in Aussie Residents

::::: columns
::: {.column width="35%"}
Better! 

Clear that India has overtaken China and New Zealand to become the third largest country of birth for Australian residents.
:::

::: {.column width="65%"}
```{r census2-part2, fig.width = 7, fig.height = 5, fig.align = "center"}
df2 %>% 
  ggplot(aes(factor(census), count, color = birth)) +
  geom_line(aes(group = birth))  +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot") + 
  geom_point() + 
  scale_y_continuous(labels = scales::comma) +
  labs(y = "Number of \nAustralian residents\n", caption = "Data source: Australian Census 2016 and 2021", x = "Census Year", color = "Birth place",
       title = "Top 5 countries of birth outside Australia")
```
:::
:::::

But, should we show percentage instead of counts?

## Changes in Aussie Residents

::::: columns
::: {.column width="35%"}
-   Note whether the trend is up or down changes.

-   So should you use percentage or total number?

-   Depends, e.g. For housing availability, total numbers of new residents are more important
:::

::: {.column width="65%"}
```{r census2-part3, fig.width = 7, fig.height = 5, fig.align = 'center'}
df2 %>% 
  ggplot(aes(factor(census), percentage/100, color = birth)) +
  geom_line(aes(group = birth)) + 
  geom_point() + 
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot") + 
  scale_y_continuous(labels = scales::percent) +
  labs(y = "Percentage of\nAustralian residents\n", caption = "Data source: Australian Census 2016 and 2021", x = "Census Year", color = "Birth place",
       title = "Top 5 countries of birth outside Australia")
```
:::
:::::

## Changes in Aussie Residents

::::: columns
::: {.column width="40%"}
Even Better!  

By adding the names to the plot directly we can:

(i) make clearer what line belongs to which country, and

(ii) increasing the data-density ratio.

We can also change the theme to reduce 'chart junk'.
:::

::: {.column width="60%"}
```{r census2-part5, fig.width = 6, fig.height = 5, fig.align='center'}
df2 %>% 
  arrange(census, birth) %>% 
  ggplot(aes(factor(census), percentage/100, color = birth)) +
  geom_line(aes(group = birth)) + 
  geom_point() + 
  theme_minimal() +
  theme(text = element_text(size = 18),
        axis.text.y = element_text(size = 8),
        plot.title.position = "plot",
        legend.position = "none") + 
  scale_y_continuous(labels = scales::percent) +
  geom_text(aes(label = birth), 
            data = ~{ .x %>% 
                filter(census==2021) %>% 
                mutate(percentage = case_when(birth=="China" ~ percentage + 0.05,
                                              birth=="New Zealand" ~ percentage - 0.05,
                                              TRUE ~ percentage))}, 
            hjust = 0, nudge_x = 0.05) +
  labs(y = "Percentage of\nAustralian residents\n", caption = "Data source: Australian Census 2016 and 2021", x = "Census Year", color = "Birth place",
       title = "Top 5 countries of birth outside Australia") 
```
:::
:::::

## One more example

```{r gestalt-proximity3, fig.height = 2, fig.width = 8}
gprox <- dfsex |>
  ggplot(aes(count, birth, fill = sex)) + 
  geom_col(position = "dodge") + 
  scale_x_continuous(labels = scales::comma) + 
  labs(y = "Birth place", x = "Number of Australian Residents",
       caption = "Data Source: Australian Census 2021",
       title = "Top 5 countries of birth outside Australia by sex",
       fill = "Sex")
gprox
```

. . .

**Data story**

Census 2021 shows far more women born in Phillipines and China migrate to Australia than men born in their respective countries, whilst more men born in India migrate to Australia than women born in India.


## Graphical Principle: Similarity

:::callout-important 
## Law of Similarity 

*   When objects share similar attributes, they are perceived as being part of the same group.

:::

```{r gestalt-similarity1, fig.height = 2, fig.width = 8}
span <- function(color, text) glue::glue("<b style='color:{color};'>{text}</b>")
dfsex %>% 
  mutate(birth = case_when(birth == "England" ~ span("#006DAE", "England"),
                           birth == "India" ~ span("#C8008F", "India"),
                           birth == "China" ~ span("#C8008F", "China"),
                           birth == "Philippines" ~ span("#C8008F", "Philippines"),
                           birth == "New Zealand" ~ span("#008A25", "New Zealand")),
         birth = fct_reorder(birth, count)) %>% 
  ggplot(aes(count, birth, fill = sex)) + 
  geom_col(position = "dodge") + 
  scale_x_continuous(labels = scales::comma) + 
  labs(y = "Birth place", x = "Number of Australian Residents",
       caption = "Data Source: Australian Census 2021",
       title = "Top 5 countries of birth outside Australia by sex",
       fill = "Sex") +
  theme(axis.text.y = ggtext::element_markdown())
```

Notice that the countries are colored by their continent (`r span("#006DAE", "Europe")`, `r span("#C8008F", "Asia")`, and `r span("#008A25", "Oceania")`).

## Graphical Principle: Closure

:::callout-important
## Law of Closure
Objects collected within a boundary-like structure are perceived as a group.
:::

```{r gestalt-closure1, fig.height = 2, fig.width = 8}
span <- function(color, text) glue::glue("<b style='color:{color};'>{text}</b>")
dfsex %>% 
  mutate(group = case_when(birth == "England" ~ "Europe",
                           birth == "India" ~ "Asia",
                           birth == "China" ~ "Asia",
                           birth == "Philippines" ~ "Asia",
                           birth == "New Zealand" ~ "Oceania")) %>% 
  ggplot(aes(count/1000, birth, fill = sex)) + 
  geom_col(position = "dodge") + 
  scale_x_continuous(labels = scales::comma) + 
  labs(y = "Birth place", x = "Number of Australian Residents ('000s)",
       caption = "Data Source: Australian Census 2021",
       title = "Top 5 countries of birth outside Australia by sex",
       fill = "Sex") +
  facet_wrap(~group, scales = "free") +
  theme(axis.text.y = ggtext::element_markdown())
```

You may also like to look revisit this example of exit polls from [Lecture 1](https://www.bbc.com/news/articles/c0lp48ldgyeo).

## Good practice in data visualisation

:::: callout-important
## Tufte's Principles

::: incremental
-   Show the data
    -   Maximise data ink
-   Avoid distorting what the data have to say
    -   Do not create misleading visualisations
-   Present your data in a small space; efficiently with clarity.
    -   Optimise data density
-   Make large data sets coherent
    -   Use small multiples
-   Encourage the eye to compare different pieces of data
    -   Group your data appropriately
:::
::::

See the 'The Visual Display of Quantitative Information' by **Edward Tufte**.

# Human Perception {background-color="#006DAE"}

## What can we perceive?

KATE NEEDS TO FINISH THIS SET OF SLIDES 

Human perception is a broad field that takes in ideas from psychology and philosophy.

For data visualisation we can perceive:

```         
- Postion on a common scale

- Relative position on an non aligned scale

- Which of Length

-   Area

-   Volume

-   Shape

-   Position

-   Color

-   Angle
```

# Colors {background-color="#006DAE"}

## Qualitative palettes

-   Designed for a categorical variable with no particular ordering

```{r, fig.height = 4, fig.width = 8, echo = TRUE}
#| code-line-numbers: false
colorspace::hcl_palettes("Qualitative", plot = TRUE, n = 7)
```

## Sequential palettes

-   Designed for ordered categorical variable or number going from low to high (or vice-versa)

```{r, fig.height = 4, fig.width = 10, echo = TRUE}
#| code-line-numbers: false
colorspace::hcl_palettes("Sequential", plot = TRUE, n = 7)
```

## Diverging palettes

-   Designed for ordered categorical variable or number going from low to high (or vice-versa) with a neutral value in between

```{r, fig.height = 6, fig.width = 8, echo = TRUE}
#| code-line-numbers: false
colorspace::hcl_palettes("Diverging", plot = TRUE, n = 7)
```

## Colorblindness

Colorblindness affect roughly 1 in 8 men.

```{r, fig.width = 12}
colorblindr::cvd_grid(gprox)
```

Check your color choices using the [`colorblindr`](https://github.com/clauswilke/colorblindr) package or otherwise.

# Bad Plots {background-color="#006DAE"}

## An ugly plot

```{r, echo=FALSE, fig.align='center'}
knitr::include_graphics('images/lecture-05/monster.jpg')
```

## Chart junk

```{r, echo=FALSE, fig.align='center'}
knitr::include_graphics('images/lecture-05/Chartjunk-example.svg')
```

## Low data ink ratio

```{r, echo=FALSE, out.width="70%", fig.align='center'}
knitr::include_graphics('images/lecture-05/low-data-ink-ratio.jpg')
```

## An improved plot

```{r, echo=FALSE, out.width="70%", fig.align='center'}
knitr::include_graphics('images/lecture-05/improved-data-ink-ratio.jpg')
```

## A comment

Sometimes rules are more like guidelines.

For instance the default background for `ggplot2` is arguably 'chartjunk'.

But there are good reasons for using it.

The gridlines help you judge the position of your data

In general though - stick to the rules and don't got reinventing data visualisation conventions.

## ggplot2

```{r, echo=FALSE, out.width="40%"}
library(ggplot2)
ggplot(anscombe, aes(x1, y1)) +
  geom_point()
```

## Wickham on the grey background

> *"We can still see the gridlines to aid in the judgement of position (Cleveland, 1993b), but they have little visual impact and we can easily "tune" them out... Finally, the grey background creates a continuous field of colour which ensures that the plot is perceived as a single visual entity."*

Source: ggplot2: Elegant Graphics for Data Analysis.

## Bad plots

KATE ALSO IS GOING TO REMOVE A BUNCH OF THESE EXAMPLES

-   What makes plots *bad* can be put into three categories:

    -   Taste (Aesthetic)
    -   Perception
    -   Data

## Errors of perception

-   Data visualisation is all about mapping data to things we can perceive.

-   This should not be done in a way that is inaccurate or misleading.

-   The following plots provide some examples of what can go wrong.

## Confusing length and area

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/mac.jpg')
```

## Confusing length and area

-   On the previous plot the number of customers is represented by length (height of computer).

-   However the *area* of the 2D pictures of computers scale up more than their *heights*.

-   Also the picture leads us to imagine a 3D computer making this effect worse.

-   The value for *Mac* is only about 3 to 4 times more than for *None* but we perceive the difference to be much more.

## Beware 3D

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/seo-traffic-columns.gif')
```

## Beware 3D

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/seo-traffic-pie-chart.gif')
```

## Beware 3D

-   Difficult to line up the heights of bars with the actual values.

-   Closer green bar (MSN) looks bigger.

-   On the pie chart rendering in 3D makes the blue segment (Google) look the biggest.

-   Do not use three dimensions when two will work well.

## Lie factor

The lie factor is given by

$$\mbox{Lie factor}=\frac{\mbox{Size of effect in graph}}{\mbox{Size of effect in data}}$$ - Ideally, the lie factor should be 1.

-   Tufte recommended $0.95 < \text{lie factor} < 1.05$.

## Road miles (from Tufte)

```{r, echo=FALSE, out.width="80%"}
knitr::include_graphics('images/lecture-05/Lie_factor_example1_image.jpg')
```

## Effects

-   The data says that mileage rose from 18 to 27.5 which is a 53% increase.

-   The line on the graph increases from 0.6 inches to 5.3 inches which is a 783% increase!

-   The lie factor is $783/53 \approx 14$.

# Bad data

## Bad data

-   Sometimes there is nothing wrong with the plot but with the data.

-   On the following slide is a plot comparing the cost of going to college in the US against the salaries of college graduates.

-   Can you find problems with this graph?

## College cost

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/diminishing-return.jpg')
```

## Problems

-   There is nothing *incorrect* about this graph.

-   However the message is misleading.

-   The income is a yearly income while the cost of college is over four years (and only paid once).

-   Also it does not show the income of people who are not college graduates.

-   Think carefully about comparisons on a plot.

-   Make sure your conclusions align with what is in the plot.

# The x and y axis

## The y-axis

-   Watch this [video](https://www.youtube.com/watch?v=14VYnFhBKcY).

-   Are we interested in the size of the variable rather than changes in the variable?

-   Is zero a reasonable value for the variable to take?

-   Are we using a bar chart?

-   Answering yes to these questions means we should give more consideration to including zero on the y-axis.

## Stock prices

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/twitter_short.png',dpi = 200)
```

From this graph we conclude that Twitter stock prices increased **dramatically** on April 26.

## A longer term view

```{r, echo=FALSE}
knitr::include_graphics('images/lecture-05/twitter_long.png',dpi = 200)
```

Not that dramatic anymore.


<!-- To dos:  -->
<!-- * Learning Objectives -->
<!-- * Summary -->
<!-- *  Human Perception (add) -->
<!-- * Tidy up the bad plots part -->